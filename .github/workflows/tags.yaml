name: Gerar Tag

on:
  push:
    branches:
      - dev

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Obter próxima versão com base nos commits
        id: version
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Última tag: $LAST_TAG"

          COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"%s")

          MAJOR=0
          MINOR=0
          PATCH=0

          if echo "$COMMITS" | grep -q "^feat"; then
            MINOR=1
          fi

          if echo "$COMMITS" | grep -q "^fix"; then
            PATCH=1
          fi

          if echo "$COMMITS" | grep -q "BREAKING CHANGE"; then
            MAJOR=1
          fi

          OLD_VERSION=$(echo "$LAST_TAG" | sed 's/v//')
          IFS='.' read -r OLD_MAJOR OLD_MINOR OLD_PATCH <<< "$OLD_VERSION"

          NEW_MAJOR=$OLD_MAJOR
          NEW_MINOR=$OLD_MINOR
          NEW_PATCH=$OLD_PATCH

          if [ $MAJOR -eq 1 ]; then
            NEW_MAJOR=$((OLD_MAJOR+1))
            NEW_MINOR=0
            NEW_PATCH=0
          elif [ $MINOR -eq 1 ]; then
            NEW_MINOR=$((OLD_MINOR+1))
            NEW_PATCH=0
          elif [ $PATCH -eq 1 ]; then
            NEW_PATCH=$((OLD_PATCH+1))
          fi

          NEW_VERSION="v${NEW_MAJOR}.${NEW_MINOR}.${NEW_PATCH}"
          echo "Nova versão: $NEW_VERSION"
          echo "tag=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Criar nova tag
        run: |
