name: Tag Automática

on:
  push:
    branches:
      - dev  

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Instalar GitHub CLI
        uses: cli/cli-action@v2

      - name: Calcular próxima versão
        id: version
        run: |
          git fetch --tags
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "0.0.0")

          echo "Última tag encontrada: $LAST_TAG"

          # Coleta commits desde a última tag
          COMMITS=$(git log "$LAST_TAG"..HEAD --pretty=format:"%s%n%b")

          MAJOR=0
          MINOR=0
          PATCH=0

          echo "$COMMITS" | grep -qi "BREAKING CHANGE" && MAJOR=1
          echo "$COMMITS" | grep -qi "^feat" && MINOR=1
          echo "$COMMITS" | grep -qi "^fix" && PATCH=1

          IFS='.' read -r MAJ MIN PAT <<< "$LAST_TAG"

          if [ "$MAJOR" -eq 1 ]; then
            MAJ=$((MAJ + 1))
            MIN=0
            PAT=0
          elif [ "$MINOR" -eq 1 ]; then
            MIN=$((MIN + 1))
            PAT=0
          elif [ "$PATCH" -eq 1 ]; then
            PAT=$((PAT + 1))
          else
            echo "Nenhuma mudança detectada. Nada será tagueado."
            exit 0
          fi

          NEW_VERSION="$MAJ.$MIN.$PAT"
          echo "Nova versão: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Criar tag e pushar
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          git tag -a "v${{ steps.version.outputs.version }}" -m "Release v${{ steps.version.outputs.version }}"
          git push origin "v${{ steps.version.outputs.version }}"
